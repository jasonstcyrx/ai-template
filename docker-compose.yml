version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0-jammy
    container_name: procurement-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: procurement_password
      MONGO_INITDB_DATABASE: procurement_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./config/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: procurement-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s
    command: redis-server --appendonly yes

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile.dev
    container_name: procurement-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://admin:procurement_password@mongodb:27017/procurement_db?authSource=admin
      - REDIS_URL=redis://redis:6379
      - FRONTEND_URL=http://localhost:5173
      - JWT_SECRET=your-jwt-secret-key-change-in-production
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # Frontend Application
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile.dev
    container_name: procurement-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api
      - VITE_APP_NAME=Procurement Platform
      - VITE_NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    networks:
      - procurement-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  procurement-network:
    driver: bridge 