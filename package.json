{
  "name": "ai-managed-development-template",
  "version": "1.0.0",
  "description": "ü§ñ AI-Powered Development Template with automated service generation, intelligent ticket management, and comprehensive testing suite",
  "main": "index.js",
  "license": "MIT",
  "keywords": [
    "template",
    "ai-powered",
    "microservices",
    "docker",
    "nestjs",
    "react",
    "typescript",
    "mongodb",
    "redis",
    "automation",
    "development-tools",
    "project-management",
    "testing",
    "devops"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/your-username/ai-managed-development-template.git"
  },
  "bugs": {
    "url": "https://github.com/your-username/ai-managed-development-template/issues"
  },
  "homepage": "https://github.com/your-username/ai-managed-development-template#readme",
  "author": "Your Name <your.email@domain.com>",
  "scripts": {
    "ü§ñ AI Service Generation": "echo '--- AI-Powered Service Generation ---'",
    "service:init": "./scripts/init-service.sh",
    "service:help": "./scripts/init-service.sh --help",
    
    "üé´ Intelligent Ticket Management": "echo '--- Ticket Workflow Management ---'",
    "ticket": "node scripts/ticket-cli.js",
    "ticket:create": "node scripts/ticket-cli.js create",
    "ticket:list": "node scripts/ticket-cli.js list",
    "ticket:show": "node scripts/ticket-cli.js show",
    "ticket:move": "node scripts/ticket-cli.js move",
    "ticket:comment": "node scripts/ticket-cli.js comment",
    "ticket:assign": "node scripts/ticket-cli.js assign",
    "ticket:archive": "node scripts/ticket-cli.js archive",
    
    "üê≥ Docker Management": "echo '--- Docker Orchestration ---'",
    "dev": "./scripts/docker-dev.sh start",
    "start": "./scripts/docker-dev.sh start",
    "stop": "./scripts/docker-dev.sh stop",
    "restart": "./scripts/docker-dev.sh restart",
    "logs": "./scripts/docker-dev.sh logs",
    "status": "./scripts/docker-dev.sh status",
    "shell": "./scripts/docker-dev.sh shell",
    "rebuild": "./scripts/docker-dev.sh rebuild",
    "cleanup": "./scripts/docker-dev.sh cleanup",
    "reset-db": "./scripts/docker-dev.sh reset-db",
    "backup-db": "./scripts/docker-dev.sh backup-db",
    "restore-db": "./scripts/docker-dev.sh restore-db",
    
    "üöÄ Production Deployment": "echo '--- Production Management ---'",
    "prod:build": "docker-compose -f docker-compose.prod.yml build",
    "prod:start": "docker-compose -f docker-compose.prod.yml up -d",
    "prod:stop": "docker-compose -f docker-compose.prod.yml down",
    "prod:logs": "docker-compose -f docker-compose.prod.yml logs -f",
    "prod:status": "docker-compose -f docker-compose.prod.yml ps",
    
    "üß™ Testing & Quality Assurance": "echo '--- Comprehensive Testing ---'",
    "test": "jest",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand",
    "test:report": "jest --coverage --coverageReporters=html text lcov",
    "test:clean": "rimraf test-results test-tickets test-apps test-workflow",
    
    "üîß Development Utilities": "echo '--- Development Tools ---'",
    "init:backend": "./scripts/init-service.sh nestjs-backend",
    "init:frontend": "./scripts/init-service.sh react-frontend", 
    "init:microservice": "./scripts/init-service.sh microservice",
    "init:worker": "./scripts/init-service.sh worker",
    "sync-rules": "node scripts/sync-rules.js",
    "rule:create": "node scripts/rule-create.js create",
    "rule:template": "node scripts/rule-create.js template"
  },
  "dependencies": {
    "commander": "^11.0.0",
    "js-yaml": "^4.1.0",
    "playwright": "^1.53.1",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.5",
    "rimraf": "^5.0.5"
  }
}
